[{"E:\\todolist-hook\\todolist-hook-master\\src\\index.js":"1","E:\\todolist-hook\\todolist-hook-master\\src\\components\\Header.js":"2","E:\\todolist-hook\\todolist-hook-master\\src\\App.js":"3","E:\\todolist-hook\\todolist-hook-master\\src\\services\\TodoService.js":"4","E:\\todolist-hook\\todolist-hook-master\\src\\reportWebVitals.js":"5","E:\\todolist-hook\\todolist-hook-master\\src\\components\\CompleteTask.js":"6","E:\\todolist-hook\\todolist-hook-master\\src\\components\\TaskListItems.js":"7","E:\\todolist-hook\\todolist-hook-master\\src\\components\\ListItem.js":"8"},{"size":500,"mtime":1610575160000,"results":"9","hashOfConfig":"10"},{"size":719,"mtime":1610979647157,"results":"11","hashOfConfig":"10"},{"size":3156,"mtime":1611021835094,"results":"12","hashOfConfig":"10"},{"size":1232,"mtime":1610979614501,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1610575160000,"results":"14","hashOfConfig":"10"},{"size":547,"mtime":1610979649497,"results":"15","hashOfConfig":"10"},{"size":1040,"mtime":1610575160000,"results":"16","hashOfConfig":"10"},{"size":647,"mtime":1610979678317,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1c7susb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"E:\\todolist-hook\\todolist-hook-master\\src\\index.js",[],["36","37"],"E:\\todolist-hook\\todolist-hook-master\\src\\components\\Header.js",[],"E:\\todolist-hook\\todolist-hook-master\\src\\App.js",["38"],"E:\\todolist-hook\\todolist-hook-master\\src\\services\\TodoService.js",[],"E:\\todolist-hook\\todolist-hook-master\\src\\reportWebVitals.js",[],"E:\\todolist-hook\\todolist-hook-master\\src\\components\\CompleteTask.js",[],"E:\\todolist-hook\\todolist-hook-master\\src\\components\\TaskListItems.js",[],"E:\\todolist-hook\\todolist-hook-master\\src\\components\\ListItem.js",["39"],"import React from \"react\";\nimport TaskListItems from \"./TaskListItems\";\nimport classes from \"./ListItem.module.css\";\nimport _ from \"lodash\";\n\nexport default function ListItem({\n  renderedItems,\n  listName,\n  onChangeCompleteStatus,\n  onChangeFavoriteStatus,\n}) {\n  return (\n    <section className={classes.listTask}>\n      <h2>{listName}</h2>\n      <ul>\n        {renderedItems.map((task) => (\n          <TaskListItems\n            key={task.id}\n            task={task}\n            onChangeCompleteStatus={onChangeCompleteStatus}\n            onChangeFavoriteStatus={onChangeFavoriteStatus}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":26,"column":19,"nodeType":"46","endLine":35,"endColumn":4},{"ruleId":"47","severity":1,"message":"48","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":9},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]