[{"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\App.js":"1","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\services\\TodoService.js":"2","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\reportWebVitals.js":"3","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\TaskListItems.js":"4","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\Header.js":"5","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\pages\\Home.js":"6","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\pages\\Login.js":"7","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\CompleteTask.js":"8","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\pages\\Profile.js":"9","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\ListItem.js":"10","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\TaskList.js":"11","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\pages\\TodoDetail.js":"12"},{"size":5423,"mtime":1611761152589,"results":"13","hashOfConfig":"14"},{"size":1232,"mtime":1611022497483,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610575160000,"results":"16","hashOfConfig":"14"},{"size":1041,"mtime":1611064140306,"results":"17","hashOfConfig":"14"},{"size":1274,"mtime":1611064140306,"results":"18","hashOfConfig":"14"},{"size":4274,"mtime":1611817256741,"results":"19","hashOfConfig":"14"},{"size":2964,"mtime":1611817259472,"results":"20","hashOfConfig":"14"},{"size":547,"mtime":1610979649497,"results":"21","hashOfConfig":"14"},{"size":333,"mtime":1611817029693,"results":"22","hashOfConfig":"14"},{"size":647,"mtime":1610979678317,"results":"23","hashOfConfig":"14"},{"size":557,"mtime":1610699198634,"results":"24","hashOfConfig":"14"},{"size":238,"mtime":1611585722876,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"gpfp6k",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\App.js",["55","56"],"import \"./App.css\";\nimport React from \"react\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\n// import { Router } from \"react-router-dom\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TodoDetail from \"./pages/TodoDetail\";\n\nexport default function App() {\n  const [page, setPage] = React.useState(\"LOGIN\");\n\n  // const handleLogin = (value) => {\n  //   setPage(value);\n  // }\n\n  // if (page === \"LOGIN\") {\n  //   return <Login setPage={setPage} />;\n  // }\n\n  // if (page === \"HOME\") {\n  //   return <Home setPage={setPage} />;\n  // }\n\n  // if (page === \"PROFILE\") {\n  //   return <Profile setPage={setPage} />;\n  // }\n\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/profile\">Profile</Link>\n          </li>\n          <li>\n            <Link to=\"/todo\">TODO APP</Link>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route exact path=\"/todo\">\n          <Home />\n        </Route>\n        <Route path=\"/todo/:slug\">\n          <TodoDetail />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n// import React, { useState } from \"react\";\n// import _ from \"lodash\";\n// import CompleteTask from \"./components/CompleteTask\";\n// import Header from \"./components/Header\";\n// import TaskList from \"./components/TaskList\";\n// import \"antd/dist/antd.css\";\n// import {\n//   GetTodos,\n//   changeTaskCompleteState,\n//   changeTaskFavoriteState,\n// } from \"./services/TodoService\";\n\n// import \"./App.css\";\n\n// function App() {\n//   const [taskLists, setTaskLists] = useState([]);\n\n//   const [isLoadding, setLoading] = React.useState(true);\n\n//   const [isError, setError] = React.useState(false);\n\n//   const [reloaddingCount, setReLoaddingCount] = React.useState(0);\n\n//   const convertDate = (time) => new Date(time).getTime();\n\n//   React.useEffect(() => {\n//     async function fetchData() {\n//       try {\n//         const tasks = await GetTodos();\n\n//         // setTaskLists(tasks.data.data);\n\n//         setTaskLists(\n//           tasks.data.data.map((task) => {\n//             return {\n//               ...task,\n//               createdDate: convertDate(task.createdDate),\n//               completedDate: convertDate(task.completedDate),\n//               isFavorite: task.isFavorite ? true : false,\n//             };\n//           })\n//         );\n//       } catch (ex) {\n//         setError(true);\n//       } finally {\n//         setLoading(false);\n//       }\n//     }\n//     fetchData();\n//   }, [reloaddingCount]);\n\n//   const renderErrorContent = () => {\n//     return (\n//       <div>\n//         <div>lỗi rồi</div>\n//         <button\n//           onClick={() => {\n//             setTaskLists([...taskLists, {}]);\n//             setReLoaddingCount(reloaddingCount + 1);\n//           }}\n//         >\n//           Tải lại\n//         </button>\n//       </div>\n//     );\n//   };\n\n//   // const handleAddTodo = async (newTaskName) => {\n//   //   try {\n//   //     if (newTaskName) {\n//   //       setLoading(true);\n//   //       setError(false);\n\n//   //       await addTodo(newTaskName);\n\n//   //       setReLoaddingCount(reloaddingCount + 1);\n//   //     }\n//   //   } catch (ex) {\n//   //     setError(true);\n//   //   }\n//   // };\n\n//   // setTaskLists([\n//   //   ...taskLists,\n//   //   {\n//   //     id: new Date().getTime(),\n//   //     createdDate: new Date().getTime(),\n//   //     completedDate: null,\n//   //     taskName: newTaskName,\n//   //     isCompleted: false,\n//   //     isFavorite: false,\n//   //   },\n//   // ]);\n\n//   const handleChangeCompleteStatus = async (taskId, newStatus) => {\n//     try {\n//       setLoading(true);\n//       setError(false);\n\n//       await changeTaskCompleteState(taskId, newStatus);\n\n//       setReLoaddingCount(reloaddingCount + 1);\n//     } catch (ex) {\n//       setError(true);\n//       console.log(ex.message);\n//     }\n//   };\n\n//   const handleChangeFavoriteStatus = async (taskId, newStatus) => {\n//     try {\n//       setLoading(true);\n//       setError(false);\n\n//       await changeTaskFavoriteState(taskId, newStatus);\n\n//       setReLoaddingCount(reloaddingCount + 1);\n//     } catch (ex) {\n//       setError(true);\n//     }\n//   };\n\n//   const rederContent = () => {\n//     return isLoadding ? (\n//       \"Loading...\"\n//     ) : (\n//       <>\n//         <Header\n//           reloaddingCount={reloaddingCount}\n//           setReLoaddingCount={setReLoaddingCount}\n//         />\n//         <TaskList\n//           incompleteItems={inCompletedList}\n//           onChangeCompleteStatus={handleChangeCompleteStatus}\n//           onChangeFavoriteStatus={handleChangeFavoriteStatus}\n//         />\n//         <CompleteTask\n//           completedItems={completedList}\n//           onChangeCompleteStatus={handleChangeCompleteStatus}\n//           onChangeFavoriteStatus={handleChangeFavoriteStatus}\n//         />\n//       </>\n//     );\n//   };\n\n//   const [completedList, inCompletedList] = _.partition(\n//     taskLists,\n//     (t) => t.isCompleted\n//   );\n\n//   return (\n//     <div className=\"App\">{isError ? renderErrorContent() : rederContent()}</div>\n//   );\n// }\n\n// export default React.memo(App);\n","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\services\\TodoService.js",[],["57","58"],"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\reportWebVitals.js",[],"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\TaskListItems.js",[],"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\Header.js",["59","60"],"import React, { useState } from \"react\";\nimport classes from \"./Header.module.css\";\nimport { addTodo } from \"../services/TodoService\";\n\nfunction Header({ reloaddingCount, setReLoaddingCount }) {\n\n  const [isLoadding, setLoading] = React.useState(false);\n\n  const [isError, setError] = React.useState(false);\n\n  const [currentItem, setCurrentItem] = useState(\"\");\n\n  const handleChange = (value) => {\n    setCurrentItem(value);\n  };\n\n  const handleAddTodo = async (newTaskName) => {\n    try {\n      if (newTaskName) {\n        setLoading(true);\n        \n        setError(false);\n\n        await addTodo(newTaskName);\n\n        setReLoaddingCount(reloaddingCount + 1);\n      }\n    } catch (ex) {\n      setError(true);\n    }\n  };\n\n  const handeKeyDown = (event) => {\n    if (event.keyCode === 13 && currentItem) {\n      handleAddTodo(currentItem);\n      setCurrentItem(\"\");\n    }\n  };\n\n  // const onTodoAdded = () => {\n  //   setLoading(true);\n\n  // }\n\n  return (\n    <header className={classes.heading}>\n      <h1>Tasks</h1>\n      <input\n        type=\"text\"\n        value={currentItem}\n        placeholder=\"Add a task\"\n        onChange={(e) => handleChange(e.target.value)}\n        onKeyDown={(event) => handeKeyDown(event)}\n      />\n    </header>\n  );\n}\n\nexport default Header;\n",["61","62"],"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\pages\\Home.js",["63"],"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\pages\\Login.js",["64","65"],"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\CompleteTask.js",[],"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\pages\\Profile.js",[],"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\ListItem.js",["66"],"import React from \"react\";\nimport TaskListItems from \"./TaskListItems\";\nimport classes from \"./ListItem.module.css\";\nimport _ from \"lodash\";\n\nexport default function ListItem({\n  renderedItems,\n  listName,\n  onChangeCompleteStatus,\n  onChangeFavoriteStatus,\n}) {\n  return (\n    <section className={classes.listTask}>\n      <h2>{listName}</h2>\n      <ul>\n        {renderedItems.map((task) => (\n          <TaskListItems\n            key={task.id}\n            task={task}\n            onChangeCompleteStatus={onChangeCompleteStatus}\n            onChangeFavoriteStatus={onChangeFavoriteStatus}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n","E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\components\\TaskList.js",[],"E:\\todolist-hook\\todolist-hook-master\\Todo-Api\\src\\pages\\TodoDetail.js",[],{"ruleId":"67","severity":1,"message":"68","line":11,"column":10,"nodeType":"69","messageId":"70","endLine":11,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":11,"column":16,"nodeType":"69","messageId":"70","endLine":11,"endColumn":23},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"67","severity":1,"message":"76","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":20},{"ruleId":"67","severity":1,"message":"77","line":9,"column":10,"nodeType":"69","messageId":"70","endLine":9,"endColumn":17},{"ruleId":"72","replacedBy":"78"},{"ruleId":"74","replacedBy":"79"},{"ruleId":"67","severity":1,"message":"80","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":14},{"ruleId":"67","severity":1,"message":"81","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":12},{"ruleId":"67","severity":1,"message":"80","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"67","severity":1,"message":"82","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":9},"no-unused-vars","'page' is assigned a value but never used.","Identifier","unusedVar","'setPage' is assigned a value but never used.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'isLoadding' is assigned a value but never used.","'isError' is assigned a value but never used.",["83"],["84"],"'Link' is defined but never used.","'Home' is defined but never used.","'_' is defined but never used.","no-global-assign","no-unsafe-negation"]